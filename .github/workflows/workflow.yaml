name: 'Terraform'

on:
  push:
    branches: [ "main", "release/*", "feature/*" ]

permissions:
  pull-requests: read

jobs:
  Build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
        shell: bash

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release

      - name: Test
        run: dotnet test

  # Publish:
  #   needs: Build
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./src/FIAP.Hackaton.GeradorFrame.Processador.Api
  #       shell: bash

    # steps:
    #   - uses: actions/checkout@v4
    #   - name: Setup .NET
    #     uses: actions/setup-dotnet@v4
    #     with:
    #       dotnet-version: 8.0.x

    #   - name: Install Amazon Lambda Tools
    #     run: dotnet tool install -g Amazon.Lambda.Tools
        
    #   - name: Publish Lambda Package
    #     run: dotnet lambda package --configuration Release --output-package ./lambda_processador.zip

    #   - name: Configure AWS credentials
    #     if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #     uses: aws-actions/configure-aws-credentials@v3
    #     with:
    #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #       aws-region: sa-east-1

    #   - name: Upload to S3
    #     if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #     run: |
    #       BUCKET_NAME="hackathon-grupo12-fiap-code-bucket"
    #       aws s3api head-bucket --bucket "$BUCKET_NAME" || aws s3api create-bucket --bucket "$BUCKET_NAME"
    #       aws s3 cp lambda_processador.zip s3://$BUCKET_NAME/

  CreateLambda: 
    needs: 'Build'
    runs-on: ubuntu-latest 
    defaults:
      run:
        working-directory: ./infra
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: sa-east-1
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
    
    - name: Terraform Init
      run: terraform init

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Plan
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform plan -input=false

    - name: Apply Terraform
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve